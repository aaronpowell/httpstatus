@page
@using Teapot.Web.Models;
@inject TeapotStatusCodeMetadataCollection StatusCodes


<p>This is a super simple service for generating different HTTP codes.</p>
<p>It's useful for testing how your own scripts deal with varying responses.</p>
<p>
    Just add the status code you want to the URL, like this:
    @Html.RouteLink("httpstat.us/200", "StatusCode", new {statusCode = 200})
</p>
<p>We'll return a response like this:</p>
<code>
    HTTP/1.1 {status code} {status description}
    Content-Type: text/plain or application/json
    Content-Length: {something}
    {any custom response headers}

    {status code} {status description}
    {list of any custom response headers we added}
</code>

<p>
    To get a JSON response back, you need to ensure that the Accept header contains 'application/json'. Then we'll JSON encode the response and send the Content-Type header accordingly.
</p>

<p>
    To get a random response back, use the <code class="inline">random/{range}</code> endpoint,
    for example
    @Html.RouteLink("httpstat.us/random/200,201,500-504", "Random", new {range = "200,201,500-504"}).
    You can duplicate ranges in order to increase their probability.
</p>

<p>
    If you want a delay on the response add a query string or provide a header of <code>@StatusExtensions.SLEEP_HEADER</code> for the sleep duration (the time in ms, max 5 minutes*), like this:
    @Html.RouteLink("httpstat.us/200?sleep=5000", "StatusCode", new {statusCode = 200, sleep = 5000})
    <br />
    <em>*When using the hosted instance the timeout is actually 230 seconds, which is the max timeout allowed by an Azure App Service (see <a href="https://social.msdn.microsoft.com/Forums/en-US/05f254a6-9b34-4eb2-a5f7-2a82fb40135f/time-out-after-230-seconds?forum=windowsazurewebsitespreview" target="_blank">this thread post</a>). If you host it yourself expect the limits to be different.</em>
</p>

<p>
    If you want to return additional headers to the client, you can send them in the request with the <code>@StatusExtensions.CUSTOM_RESPONSE_HEADER_PREFIX</code> prefix. A header of <code>@(StatusExtensions.CUSTOM_RESPONSE_HEADER_PREFIX)Foo: Bar</code> will append the <code>Foo: Bar</code> header in the response.
</p>

<p>Here are all the codes we support (and any special notes):</p>
<dl>
    @foreach ((int statusCode, TeapotStatusCodeMetadata result) in StatusCodes.OrderBy(x => x.Value.IsNonStandard).ThenBy(x => x.Key))
    {
        <dt><a href="/@statusCode" target="_blank">@statusCode</a></dt>
        <dd>
            @if (result.Link is not null)
            {
                <a href="@result.Link" target="_blank" title="@result.Description">@result.Description@(result.IsNonStandard ? " (non-standard status code)" : "")</a>
            }
            else
            {
                @result.Description

                @(result.IsNonStandard ? " (non-standard status code)" : "")
            }
        </dd>
    }
</dl>
<p>If you need to enable <a href="https://developer.mozilla.org/docs/Web/HTTP/CORS" target="_blank" rel="noopener">CORS</a>, all endpoints have been configured to allow all origins, headers, and HTTP methods.</p>

<p>If you send any other three digit number that's not in that list, we'll return it too. Or, <a href="https://github.com/aaronpowell/httpstatus">send us a pull request</a> to add full support for a new code.</p>
<p>Enjoy!</p>